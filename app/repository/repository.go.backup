
// Insert creates a new example in the collection.
func (m *repository) Insert(example *Example) error {
	err := m.Collection.Insert(example)
	if err != nil {
		return err
	}

	return nil
}

// FindOne finds one document in the collection.
func (m *repository) FindOne(example *Example) error {

	err := m.Collection.Find(nil).Select(example).One(example)
	if err != nil {
		return err
	}

	return nil
}

// FindAll finds all documents in the collection.
func (m *repository) FindAll(examples *[]Example) error {

	err := m.Collection.Find(nil).All(examples)
	if err != nil {
		return err
	}

	return nil
}

// Update an existing example.
func (m *repository) Update(example *Example) error {
	query := bson.M{"path": example.Path}
	err := m.Collection.Update(query, example)
	if err != nil {
		return err
	}

	return nil
}

// New returns a new manager.
func New(db *mgo.Database) *repository {
	return &repository{Collection: db.C("examples")}
}
